{"ast":null,"code":"import _slicedToArray from \"/var/www/html/react-projects/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/html/react-projects/my-app/src/Board.js\";\nimport React from 'react';\nimport Square from './Square';\nimport Game from './Game';\nimport ReactDOM from 'react-dom';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      clickClass: Array(9).fill('square'),\n      disabled: Array(9).fill(false),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares)) {\n      return;\n    }\n\n    if (this.state.disabled[i]) {\n      alert(\"You can't click on this column, becuase it's already cliked by your opposit person\");\n      return;\n    }\n\n    const clickClass = this.state.clickClass.slice();\n    const disabled = this.state.disabled.slice();\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    clickClass[i] = this.state.xIsNext ? 'square xclicked' : 'square oclicked';\n    disabled[i] = true;\n    this.setState({\n      squares: squares,\n      clickClass: clickClass,\n      xIsNext: !this.state.xIsNext,\n      disabled: disabled\n    });\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.state.squares[i],\n      class: this.state.clickClass[i],\n      onClick: () => this.handleClick(i),\n      disabled: this.state.disabled[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n  renderAgain() {\n    this.setState(state => ({\n      squares: Array(9).fill(null),\n      clickClass: Array(9).fill('square'),\n      disabled: Array(9).fill(false),\n      xIsNext: true\n    }));\n  }\n\n  renderClose() {\n    console.log(\"hhh\");\n    ReactDOM.render(React.createElement(Game, {\n      player1: this.props.player1,\n      player2: this.props.player2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), document.getElementById('root'));\n  }\n\n  capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let winnerName;\n    let status;\n    let statusClass = 'status';\n\n    if (winner) {\n      if (winner === 'X') winnerName = this.props.player1;else winnerName = this.props.player2;\n      status = 'Congratulations the Winner is : ' + winnerName;\n      statusClass = statusClass + ' winner';\n    } else {\n      const gameOver = checkGameOver(this.state.squares);\n\n      if (gameOver) {\n        status = \"Games Over\";\n        statusClass = statusClass + ' game-over';\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: statusClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, status), React.createElement(\"div\", {\n          className: \"board-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n          className: \"board-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n          className: \"board-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)), React.createElement(\"button\", {\n          onClick: () => this.renderAgain(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Retry\"), React.createElement(\"button\", {\n          onClick: () => this.renderClose(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Exit\"));\n      } else status = 'Player: ' + (this.state.xIsNext ? this.capitalize(this.props.player1) : this.capitalize(this.props.player2));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: statusClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nfunction checkGameOver(squares) {\n  for (let i = 0; i < squares.length; i++) {\n    if (squares[i] == null) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default Board;","map":{"version":3,"sources":["/var/www/html/react-projects/my-app/src/Board.js"],"names":["React","Square","Game","ReactDOM","Board","Component","constructor","props","state","squares","Array","fill","clickClass","disabled","xIsNext","handleClick","i","slice","calculateWinner","alert","setState","renderSquare","renderAgain","renderClose","console","log","render","player1","player2","document","getElementById","capitalize","str","charAt","toUpperCase","winner","winnerName","status","statusClass","gameOver","checkGameOver","lines","length","a","b","c"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADA;AAETC,MAAAA,UAAU,EAAEF,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,QAAd,CAFH;AAGTE,MAAAA,QAAQ,EAAEH,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,KAAd,CAHD;AAITG,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMH;;AACDC,EAAAA,WAAW,CAACC,CAAD,EAAG;AACV,UAAMP,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBQ,KAAnB,EAAhB;;AACA,QAAGC,eAAe,CAACT,OAAD,CAAlB,EAA4B;AACxB;AACH;;AACD,QAAG,KAAKD,KAAL,CAAWK,QAAX,CAAoBG,CAApB,CAAH,EAA0B;AACtBG,MAAAA,KAAK,CAAC,oFAAD,CAAL;AACA;AACH;;AACD,UAAMP,UAAU,GAAG,KAAKJ,KAAL,CAAWI,UAAX,CAAsBK,KAAtB,EAAnB;AACA,UAAMJ,QAAQ,GAAG,KAAKL,KAAL,CAAWK,QAAX,CAAoBI,KAApB,EAAjB;AACAR,IAAAA,OAAO,CAACO,CAAD,CAAP,GAAa,KAAKR,KAAL,CAAWM,OAAX,GAAmB,GAAnB,GAAuB,GAApC;AACAF,IAAAA,UAAU,CAACI,CAAD,CAAV,GAAgB,KAAKR,KAAL,CAAWM,OAAX,GAAmB,iBAAnB,GAAqC,iBAArD;AACAD,IAAAA,QAAQ,CAACG,CAAD,CAAR,GAAc,IAAd;AACA,SAAKI,QAAL,CAAc;AAACX,MAAAA,OAAO,EAAEA,OAAV;AAAmBG,MAAAA,UAAU,EAAEA,UAA/B;AAA2CE,MAAAA,OAAO,EAAE,CAAC,KAAKN,KAAL,CAAWM,OAAhE;AAAyED,MAAAA,QAAQ,EAAEA;AAAnF,KAAd;AACH;;AACDQ,EAAAA,YAAY,CAACL,CAAD,EAAI;AACZ,WAAO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,OAAX,CAAmBO,CAAnB,CAAf;AAAsC,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWI,UAAX,CAAsBI,CAAtB,CAA7C;AAAuE,MAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,CAAiBC,CAAjB,CAAtF;AAA2G,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWK,QAAX,CAAoBG,CAApB,CAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACDM,EAAAA,WAAW,GAAE;AACT,SAAKF,QAAL,CAAcZ,KAAK,KAAK;AACpBC,MAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADW;AAEpBC,MAAAA,UAAU,EAAEF,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,QAAd,CAFQ;AAGpBE,MAAAA,QAAQ,EAAEH,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,KAAd,CAHU;AAIpBG,MAAAA,OAAO,EAAE;AAJW,KAAL,CAAnB;AAMH;;AACDS,EAAAA,WAAW,GAAE;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAtB,IAAAA,QAAQ,CAACuB,MAAT,CACI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWoB,OAA1B;AAAmC,MAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWqB,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ;AAIH;;AACDC,EAAAA,UAAU,CAACC,GAAD,EAAK;AACX,WAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACf,KAAJ,CAAU,CAAV,CAArC;AACH;;AACDS,EAAAA,MAAM,GAAG;AACL,UAAMS,MAAM,GAAGjB,eAAe,CAAC,KAAKV,KAAL,CAAWC,OAAZ,CAA9B;AACA,QAAI2B,UAAJ;AACA,QAAIC,MAAJ;AACA,QAAIC,WAAW,GAAG,QAAlB;;AACA,QAAGH,MAAH,EAAU;AACN,UAAGA,MAAM,KAAK,GAAd,EACIC,UAAU,GAAG,KAAK7B,KAAL,CAAWoB,OAAxB,CADJ,KAGIS,UAAU,GAAG,KAAK7B,KAAL,CAAWqB,OAAxB;AACJS,MAAAA,MAAM,GAAG,qCAAoCD,UAA7C;AACAE,MAAAA,WAAW,GAAGA,WAAW,GAAC,SAA1B;AACH,KAPD,MAQI;AACA,YAAMC,QAAQ,GAAGC,aAAa,CAAC,KAAKhC,KAAL,CAAWC,OAAZ,CAA9B;;AACA,UAAG8B,QAAH,EAAY;AACRF,QAAAA,MAAM,GAAG,YAAT;AACAC,QAAAA,WAAW,GAAGA,WAAW,GAAC,YAA1B;AACA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAEA,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BD,MAA9B,CADJ,EAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKhB,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAFJ,EAOI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAPJ,EAYI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAZJ,EAiBI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjBJ,EAkBI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBJ,CADJ;AAsBH,OAzBD,MA0BIc,MAAM,GAAG,cAAY,KAAK7B,KAAL,CAAWM,OAAX,GAAmB,KAAKiB,UAAL,CAAgB,KAAKxB,KAAL,CAAWoB,OAA3B,CAAnB,GAAuD,KAAKI,UAAL,CAAgB,KAAKxB,KAAL,CAAWqB,OAA3B,CAAnE,CAAT;AACP;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEU,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BD,MAA9B,CADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhB,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAFJ,EAOI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAPJ,EAYI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAZJ,CADJ;AAoBH;;AA9G+B;;AAgHpC,SAASH,eAAT,CAAyBT,OAAzB,EAAkC;AAC9B,QAAMgC,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,KAAK,CAACC,MAA1B,EAAkC1B,CAAC,EAAnC,EAAuC;AAAA,oCACnByB,KAAK,CAACzB,CAAD,CADc;AAAA,UAC9B2B,CAD8B;AAAA,UAC3BC,CAD2B;AAAA,UACxBC,CADwB;;AAErC,QAAIpC,OAAO,CAACkC,CAAD,CAAP,IAAclC,OAAO,CAACkC,CAAD,CAAP,KAAelC,OAAO,CAACmC,CAAD,CAApC,IAA2CnC,OAAO,CAACkC,CAAD,CAAP,KAAelC,OAAO,CAACoC,CAAD,CAArE,EAA0E;AACxE,aAAOpC,OAAO,CAACkC,CAAD,CAAd;AACD;AACF;;AACD,SAAO,IAAP;AACH;;AACD,SAASH,aAAT,CAAuB/B,OAAvB,EAA+B;AAC3B,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,OAAO,CAACiC,MAA5B,EAAoC1B,CAAC,EAArC,EAAyC;AACrC,QAAGP,OAAO,CAACO,CAAD,CAAP,IAAa,IAAhB,EAAqB;AACjB,aAAO,KAAP;AACH;AACJ;;AACD,SAAO,IAAP;AACH;;AACD,eAAeZ,KAAf","sourcesContent":["import React from 'react';\nimport Square from './Square';\nimport Game from './Game';\nimport ReactDOM from 'react-dom';\n\nclass Board extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            clickClass: Array(9).fill('square'),\n            disabled: Array(9).fill(false),\n            xIsNext: true,\n        }\n    }\n    handleClick(i){\n        const squares = this.state.squares.slice();\n        if(calculateWinner(squares)){\n            return;\n        }\n        if(this.state.disabled[i]){\n            alert(\"You can't click on this column, becuase it's already cliked by your opposit person\")\n            return;\n        }\n        const clickClass = this.state.clickClass.slice();\n        const disabled = this.state.disabled.slice();\n        squares[i] = this.state.xIsNext?'X':'O';\n        clickClass[i] = this.state.xIsNext?'square xclicked':'square oclicked';\n        disabled[i] = true;\n        this.setState({squares: squares, clickClass: clickClass, xIsNext: !this.state.xIsNext, disabled: disabled});\n    }\n    renderSquare(i) {\n        return <Square value={this.state.squares[i]} class={this.state.clickClass[i]} onClick={() => this.handleClick(i)} disabled={this.state.disabled[i]}/>;\n    }\n    renderAgain(){\n        this.setState(state => ({\n            squares: Array(9).fill(null),\n            clickClass: Array(9).fill('square'),\n            disabled: Array(9).fill(false),\n            xIsNext: true,\n        }));\n    }\n    renderClose(){\n        console.log(\"hhh\")\n        ReactDOM.render(\n            <Game player1={this.props.player1} player2={this.props.player2} />,\n            document.getElementById('root')\n        );\n    }\n    capitalize(str){\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n    render() {\n        const winner = calculateWinner(this.state.squares);\n        let winnerName;\n        let status;\n        let statusClass = 'status';\n        if(winner){\n            if(winner === 'X')\n                winnerName = this.props.player1;\n            else\n                winnerName = this.props.player2;\n            status = 'Congratulations the Winner is : '+ winnerName\n            statusClass = statusClass+' winner';\n        }\n        else{\n            const gameOver = checkGameOver(this.state.squares);\n            if(gameOver){\n                status = \"Games Over\";\n                statusClass = statusClass+' game-over';\n                return (\n                    <div>\n                        <div className={statusClass}>{status}</div>\n                        <div className=\"board-row\">\n                            {this.renderSquare(0)}\n                            {this.renderSquare(1)}\n                            {this.renderSquare(2)}\n                        </div>\n                        <div className=\"board-row\">\n                            {this.renderSquare(3)}\n                            {this.renderSquare(4)}\n                            {this.renderSquare(5)}\n                        </div>\n                        <div className=\"board-row\">\n                            {this.renderSquare(6)}\n                            {this.renderSquare(7)}\n                            {this.renderSquare(8)}\n                        </div>\n                        <button onClick={() => this.renderAgain()}>Retry</button>\n                        <button onClick={() => this.renderClose()}>Exit</button>\n                    </div>\n                );\n            }else\n                status = 'Player: '+(this.state.xIsNext?this.capitalize(this.props.player1):this.capitalize(this.props.player2));\n        }\n        return (\n            <div>\n                <div className={statusClass}>{status}</div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\nfunction calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n}\nfunction checkGameOver(squares){\n    for (let i = 0; i < squares.length; i++) {\n        if(squares[i]== null){\n            return false;\n        }\n    }\n    return true;\n}\nexport default Board;"]},"metadata":{},"sourceType":"module"}